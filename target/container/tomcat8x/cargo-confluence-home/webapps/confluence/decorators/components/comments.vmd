#requireResource("confluence.web.resources:ajs")
#set ($useWatch = $remoteUser && !$action.userWatchingPage)
#set ($commentTextareaTabIndex = 200)

#if ($page.type == "blogpost")
<div class="hidden parameters">
## TODO - replace this below with something like comment-page-title, hard to refactor :(( Is it even used? Selenium test check?
## Used by macrobrowser smart fields to set the page param for comments.
    <input type="hidden" id="pageTitle" value="/$page.datePath/$page.title">
</div>
#end

#macro (displayCommentActions $commentId $commentActionSection $webInterfaceContext)
    #set ($items=$webInterfaceManager.getDisplayableItems("system.comment.action/$commentActionSection", $webInterfaceContext))
    #if ($items)
    <ul class="comment-actions-$commentActionSection">
        #foreach ($item in $items)
        ## provide first class name for IE6 cause first-child selector doesn't work
            #if ($velocityCount==1) #set ($className="first") #else #set ($className="") #end
            #if ($item.styleClass) #set($className = "$className $item.styleClass") #end
        ## don't introduce a line break between the <li> and <a> otherwise this will introduce an unwanted spacing when this markup is rendered. See http://css-tricks.com/fighting-the-space-between-inline-block-elements/
            <li class="$className"><a #if ($item.tooltip)title="$item.tooltip.getDisplayableLabel($req, $webInterfaceContext)"#end href="$item.link.getDisplayableUrl($req, $webInterfaceContext)"
                #if ($item.link.id) id="${item.link.id}-$commentId" #end
                    ><span>$item.label.getDisplayableLabel($req, $webInterfaceContext)</span></a></li>
        #end
    </ul>
    #end
#end

#macro (displayCommentForm $formname $actionParams $pageId $rte)

<p class="comment-user-logo">
    #userLogoBlock($remoteUser)
</p>

<div class="comment-body">
    #alertAnonymous()
    <div id="editor-messages"></div>
    <div id="all-messages"></div>

<form name="$formname" method="post" action="$req.contextPath/pages/doaddcomment.action?${actionParams}" class="aui">
    #form_xsrfToken()
    #if ($rte)
        #if($darkFeatures.isDarkFeatureEnabled('frontend.editor.v4'))
            #requireResourcesForContext("editor-v4")
        #else
            #requireResourcesForContext("editor-v3")
        #end
        #requireResourcesForContext("editor")
        #requireResourcesForContext("comment-editor")
        #bodytag ("Component" "name='Content'" "theme='aui'" "template='editor.vm'")
        #param ("formname" $formname)
        #param ("spaceKey" "$htmlUtil.urlEncode($spaceKey)")
        #param ("tabindex" $commentTextareaTabIndex)
        #param ("heartbeat" "true")
        #param ("contentId" "$pageId")
        #param ("contentType" "comment")
        #param ("minEditorHeight" "150")
        #param ("useWatch" $useWatch)
        #param ("shouldResize" "true")
        #param ("fullscreen" "false")
        #param ("requireResources" "true")
        #param ("autoStart" "true")
        #param ("wrapEditorWithContainer" "true")
        #param ("showDraftStatus" "false")
    #end
#else
    <div id="comments-text-editor">
                    <span class="comment-actions">
                        <ul>
                            <li>
                                <a href="$req.contextPath$generalUtil.customGetPageUrl($page)showComments=true&amp;showCommentArea=true#addcomment" id="add-comment-rte" accesskey="$action.getTextStrict("add.comment.accesskey")" class="toolbar-trigger full-load">$action.getText('comment.load.rte')</a>
                            </li>
                        </ul>
                    </span>
        <textarea name="textContent" placeholder="$action.getText('comment.add.placeholder')"></textarea>
        <div class="text-editor-chrome aui-toolbar">
            <ul class="toolbar-group">
                <li class="toolbar-item">
                    <button class="toolbar-trigger" id="text-comment-save" name="confirm" value="$action.getText('save.name')" type="submit">$action.getText('save.name')</button>
                </li>
            </ul>
        </div>
    </div>
#end
</form>
</div>
#end

#macro (commentThread $comment)
    #set ($page = $comment.container)
<li id="comment-thread-$comment.id" class="comment-thread">
    #if ($action.editComment && $action.comment && $action.comment.id == $comment.id && $permissionHelper.canEdit($remoteUser, $comment ))
        #if($darkFeatures.isDarkFeatureEnabled('frontend.editor.v4'))
            #requireResourcesForContext("editor-v4")
        #else
            #requireResourcesForContext("editor-v3")
        #end
        #requireResourcesForContext("editor")
        #requireResourcesForContext("comment-editor")
    <div class="comment edit" id="comment-$comment.id">
        <p class="comment-user-logo">
            #userLogoBlock($comment.creator)
        </p>
    <div class="comment-body">
        <div id="editor-messages"></div>
        <div id="all-messages"></div>

    <form name="editcommentform" class="aui" method="post" action="$req.contextPath/pages/doeditcomment.action?pageId=$page.id&amp;commentId=$comment.id">
        #form_xsrfToken()
                        #bodytag ("Component" "name='Content'" "theme='aui'" "template='editor.vm'")
                            #param ("formname" "editcommentform")
                            #param ("spaceKey" "$htmlUtil.urlEncode($spaceKey)")
                            #param ("tabindex" $commentTextareaTabIndex)
                            #param ("heartbeat" "true")
                            #param ("wysiwygContent" "$action.getCommentAsXHtmlForWysiwyg()")
                            #param ("contentId" "$comment.id")
                            #param ("contentType" "comment")
                            #param ("minEditorHeight" "150")
                     #param ("useWatch" $useWatch)
                     #param ("shouldResize" "true")
                     #param ("fullscreen" "false")
                     #param ("requireResources" "true")
                     #param ("autoStart" "true")
                         #param ("wrapEditorWithContainer" "true")
                        #end
</form>
</div>

#else
    <div class="comment #if ($comment.id == $focusedCommentId) focused #end " id="comment-$comment.id">
        <p class="comment-user-logo">
            #userLogoBlock($comment.creator)
        </p>
        <div class="comment-header">
            <h4 class="author">$action.getText("comment.author.byline", ["#userLink ($comment.creator)"])#if ($page.type == "blogpost" && $comment.creator == $page.creator) <span class="aui-lozenge aui-lozenge-subtle">$i18n.getText('comment.author.lozenge')</span>#end</h4>
        </div>
        <div class="comment-body">
            <div class="comment-content wiki-content">
                $action.getXHtmlComments().get($comment)
            </div>
            <div class="comment-actions">
                #set ($webInterfaceContext = $action.getWebInterfaceContext($comment))
                        #displayCommentActions($comment.id "secondary" $webInterfaceContext)
                        #displayCommentActions($comment.id "primary" $webInterfaceContext)
            </div>
        </div>
    </div>

    #trackbackRdf ($trackbackUtils.getContentIdentifier($comment) $page.title $trackbackUtils.getPingUrl($comment))

    #if ( $action.threadComments && $action.replyToComment == $comment.id && $permissionHelper.canComment($action.authenticatedUser, $comment.container) && $action.isPrintableVersion()==false )
        <ol class="comment-threads">
            <li class="comment-thread">
                <div class="comment reply">
                    #displayCommentForm("threadedcommentform", "pageId=${page.id}&parentId=${comment.id}", ${page.id}, true)
                </div>
            </li>
        </ol>
    #end
#end

#if ($threadComments)
    #if ($comment.children.size() > 0)
        <ol class="comment-threads">
            #foreach ($childComment in $comment.children)
                    #commentThread($childComment)
                #end
        </ol>
    #end
#end
</li>
#end

#* make sure you pass in an AbstractPage as a decorator parameter when you call this inline decorator *#
#set ($page = $params.get("page"))

## NOTE: While we still have both statically and dynamically rendered comments in Confluence these templates are duplicated in comments.soy.
##       If you are changing one you will probably also need to change the other.

#if (!$action.isPrintableVersion())
    #requireResourcesForContext("atl.comments")
<div id="comments-section" class="pageSection group">
    #set ($pageLevelComments = $page.pageLevelComments)
    #if ($pageLevelComments.size() > 0 || $action.showCommentArea)
        <div class="section-header">
            <h2 id="comments-section-title" class="section-title">
                #if ($pageLevelComments.size() == 1)
                    $action.getText("comment.singular")
                #else
                    $action.getText("comment.plural", [$pageLevelComments.size()])
                #end
            </h2>
        </div>
    #end

##    Happens when you try to edit a comment that doesn't exist
    #if ($action.editComment && !$action.comment)
        #applyDecorator ("message")
        #decoratorParam("type" "error")
        $action.getText("comment.edit.not.found")
    #end
#end

#* Show expanded comments. If there are none, then show nothing at all (no heading, zilch!) *#
#if ($pageLevelComments.size() > 0)
    #if ($threadComments)
        #set ($topLevelComments = $page.topLevelComments)
    #else
        #set ($topLevelComments = $pageLevelComments)
    #end
    <ol class="comment-threads top-level" id="page-comments">
        #foreach ($comment in $topLevelComments)
            #commentThread($comment)
        #end
    </ol>
#end

#set ($bottomCommentPanels=$webInterfaceManager.getDisplayableWebPanels("atl.comments.view.bottom", $action.context))
#if ($bottomCommentPanels && $permissionHelper.canComment($remoteUser, $page))
    <div class="bottom-comment-panels comment-panels">
        #foreach ($panel in $bottomCommentPanels)
        $panel.getHtml($action.context)
        #end
    </div>
#end

#if (!$action.isPrintableVersion() && $permissionHelper.canComment($remoteUser, $page))
    #if ($action.showCommentArea)
        <div id="addcomment" class="comment add">
            #displayCommentForm("inlinecommentform", "pageId=${page.id}", ${page.id}, true)
        </div>
    #elseif($darkFeatures.isFeatureEnabled('text.comment.editor'))
        <div id="addcomment" class="comment add comment-text">
            #displayCommentForm("textcommentform", "pageId=${page.id}", ${page.id}, false)
        </div>
    #else
        <div id="comments-actions" class="aui-toolbar noprint">
            <p class="toolbar-group">
                <span class="toolbar-item"><a href="$req.contextPath$generalUtil.customGetPageUrl($page)showComments=true&amp;showCommentArea=true#addcomment" id="add-comment-rte" accesskey="$action.getTextStrict("add.comment.accesskey")" class="toolbar-trigger full-load">$action.getText('action.add.comment')</a></span>
            </p>
        </div>
    #end
#end
</div>
#end

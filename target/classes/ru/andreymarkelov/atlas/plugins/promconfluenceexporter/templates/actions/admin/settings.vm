<html>
    <head>
        <title>$action.getText("ru.andreymarkelov.atlas.plugins.promconfluenceexporter.admin.settings.title")</title>
        #requireResourcesForContext("prom-for-confluence-exporter")
        <content tag="selectedWebItem">prom-for-confluence-exporter-configuration</content>
        <meta name="decorator" content="atl.admin"/>
    </head>
    <body>
        #parse ("/template/includes/actionerrors.vm")
        <header class="aui-page-header">
            <div class="aui-page-header-inner">
                <div class="aui-page-header-main">
                    <p>$i18n.getText("ru.andreymarkelov.atlas.plugins.promconfluenceexporter.admin.section.desc")</p>
                    <p>
                        <span class="aui-icon aui-icon-small aui-iconfont-info"></span>
                        $action.getText("ru.andreymarkelov.atlas.plugins.promconfluenceexporter.admin.settings.linkdesc")
                        <a target="_blank" href="$req.contextPath/plugins/servlet/prometheus/metrics#if($!{token} != "")?token=${token}#end">$action.getText("ru.andreymarkelov.atlas.plugins.promconfluenceexporter.admin.settings.link")</a>.
                    </p>
                    <p>
                        <span class="aui-icon aui-icon-small aui-iconfont-info"></span>
                        $action.getText("ru.andreymarkelov.atlas.plugins.promconfluenceexporter.admin.settings.lastexecution") ${lastExecutionTimestamp}
                    </p>
                </div>
            </div>
        </header>
        #if ($saved)
        <div class="aui-message closeable">
            <p class="title">$action.getText("ru.andreymarkelov.atlas.plugins.promconfluenceexporter.admin.settings.status.success")</p>
            <span class="aui-icon icon-success"></span>
        </div>
        #end
        <div>
            <div id="base-form">
                <form method="POST" action="savesettings.action" name="savesettings" class="aui">
                    #form_xsrfToken()
                    <div class="field-group">
                        <label for="token">$action.getText("ru.andreymarkelov.atlas.plugins.promconfluenceexporter.admin.settings.token")</label>
                        <input class="text long-field" v-model="storedToken" type="text" id="token" name="token" title="$action.getText('ru.andreymarkelov.atlas.plugins.promconfluenceexporter.admin.settings.token')"/>
                        <button class="aui-button" @click.prevent="generateToken">Generate</button>
                        #if($action.getFieldErrors().containsKey("token"))
                        <div class="error" id="days-error">$action.getFieldErrors().get("token").get(0)</div>
                        #end
                        <div class="description">$action.getText("ru.andreymarkelov.atlas.plugins.promconfluenceexporter.admin.settings.token.desc")</div>
                    </div>
                    <div class="field-group">
                        <label for="delay">$action.getText("ru.andreymarkelov.atlas.plugins.promconfluenceexporter.admin.settings.delay"):<span class="aui-icon icon-required">required</span></label>
                        <input id="delay" name="delay" v-model="storedDelay" type="number" min=1 class="text">
                        #if($action.getErrors().containsKey("delay"))<div class="error">$action.getErrors().get("delay")</div>#end
                        <div class="description">$i18n.getText("ru.andreymarkelov.atlas.plugins.promconfluenceexporter.admin.settings.delay.desc")</div>
                    </div>
                    <div class="buttons-container">
                        <div class="buttons">
                            <input value="$action.getText('ru.andreymarkelov.atlas.plugins.promconfluenceexporter.admin.settings.actions.save')" type="submit" class="button submit"/>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <script>
            new Vue({
                el: "#base-form",
                data() {
                    return {
                        storedToken: "$!{token}",
                        storedDelay: "$!{delay}",
                        possible: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"
                    }
                },
                methods: {
                    generateToken: function () {
                        var res = "";
                        for (var i = 0; i < 35; i++) {
                            res += this.possible.charAt(Math.floor(Math.random() * this.possible.length));
                        }
                        this.storedToken = res;
                    }
                }
            });
        </script>
    </body>
</html>
